generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:admin@localhost:5432/db?schema=public"
}

model IProject {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  date_created  DateTime @default(now())
  date_modified DateTime @default(now())
  ITask         ITask[]
}

model IStatus {
  id            Int      @id @default(autoincrement())
  label         String
  date_created  DateTime @default(now())
  date_modified DateTime @default(now())
  ITask         ITask[]
}

model ITag {
  id            Int        @id @default(autoincrement())
  label         String
  date_created  DateTime   @default(now())
  date_modified DateTime   @default(now())
  ITaskTag      ITaskTag[]
}

model ITask {
  id            Int        @id @default(autoincrement())
  title         String
  description   String?
  statusId      Int
  projectId     Int
  date_created  DateTime   @default(now())
  date_modified DateTime   @default(now())
  IProject      IProject   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  IStatus       IStatus    @relation(fields: [statusId], references: [id], onDelete: Cascade)
  ITaskTag      ITaskTag[]
}

model ITaskTag {
  id     Int   @id @default(autoincrement())
  tagId  Int
  taskId Int
  ITag   ITag  @relation(fields: [tagId], references: [id], onDelete: Cascade)
  ITask  ITask @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@unique([tagId, taskId], map: "TaskTag_tagId_taskId")
}
